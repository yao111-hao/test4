// *************************************************************************
//
// Copyright 2022 Xilinx, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// *************************************************************************
//
// rdma_subsystem_wrapper
// -- wrapper for the rdma subsystem
// -- retry buffer and doorbell update from user logic are disabled at the
//    moment. We will add these features in the future version
//
// *************************************************************************
`timescale 1ns/1ps

module rdma_subsystem_wrapper #(
  parameter C_AXIS_DATA_WIDTH  = 512,
  parameter C_AXIS_KEEP_WIDTH  = 64,
  parameter C_AXIS_IMMDT_WIDTH = 64
) (
  // AXIL interface for RDMA control register
  (* mark_debug = "true" *) input  [31:0] s_axil_awaddr,
  (* mark_debug = "true" *) input         s_axil_awvalid,
  (* mark_debug = "true" *) output        s_axil_awready,
  (* mark_debug = "true" *) input  [31:0] s_axil_wdata,
  (* mark_debug = "true" *) input   [3:0] s_axil_wstrb,
  (* mark_debug = "true" *) input         s_axil_wvalid,
  (* mark_debug = "true" *) output        s_axil_wready,
  (* mark_debug = "true" *) input  [31:0] s_axil_araddr,
  (* mark_debug = "true" *) input         s_axil_arvalid,
  (* mark_debug = "true" *) output        s_axil_arready,
  (* mark_debug = "true" *) output [31:0] s_axil_rdata,
  (* mark_debug = "true" *) output        s_axil_rvalid,
  (* mark_debug = "true" *) output  [1:0] s_axil_rresp,
  (* mark_debug = "true" *) input         s_axil_rready,
  (* mark_debug = "true" *) output  [1:0] s_axil_bresp,
  (* mark_debug = "true" *) output        s_axil_bvalid,
  (* mark_debug = "true" *) input         s_axil_bready,

  // RDMA TX interface (including roce and non-roce packets) to CMAC TX path
  output [C_AXIS_DATA_WIDTH-1:0] m_rdma2cmac_axis_tdata,
  output [C_AXIS_KEEP_WIDTH-1:0] m_rdma2cmac_axis_tkeep,
  output                         m_rdma2cmac_axis_tvalid,
  output                         m_rdma2cmac_axis_tlast,
  input                          m_rdma2cmac_axis_tready,

  // Non-RDMA packets from QDMA TX bypassing RDMA TX
  input  [C_AXIS_DATA_WIDTH-1:0] s_qdma2rdma_non_roce_axis_tdata,
  input  [C_AXIS_KEEP_WIDTH-1:0] s_qdma2rdma_non_roce_axis_tkeep,
  input                          s_qdma2rdma_non_roce_axis_tvalid,
  input                          s_qdma2rdma_non_roce_axis_tlast,
  output                         s_qdma2rdma_non_roce_axis_tready,

  // RDMA RX interface from CMAC RX, no rx backpressure
  input  [C_AXIS_DATA_WIDTH-1:0] s_cmac2rdma_roce_axis_tdata,
  input  [C_AXIS_KEEP_WIDTH-1:0] s_cmac2rdma_roce_axis_tkeep,
  input                          s_cmac2rdma_roce_axis_tvalid,
  input                          s_cmac2rdma_roce_axis_tlast,
  input                          s_cmac2rdma_roce_axis_tuser,

  // Non-RDMA packets from CMAC RX bypassing RDMA, no rx backpressure
  input  [C_AXIS_DATA_WIDTH-1:0] s_cmac2rdma_non_roce_axis_tdata,
  input  [C_AXIS_KEEP_WIDTH-1:0] s_cmac2rdma_non_roce_axis_tkeep,
  input                          s_cmac2rdma_non_roce_axis_tvalid,
  input                          s_cmac2rdma_non_roce_axis_tlast,
  input                          s_cmac2rdma_non_roce_axis_tuser,

  // Non-RDMA packets bypassing RDMA to QDMA RX
  output [C_AXIS_DATA_WIDTH-1:0] m_rdma2qdma_non_roce_axis_tdata,
  output [C_AXIS_KEEP_WIDTH-1:0] m_rdma2qdma_non_roce_axis_tkeep,
  output                         m_rdma2qdma_non_roce_axis_tvalid,
  output                         m_rdma2qdma_non_roce_axis_tlast,
  input                          m_rdma2qdma_non_roce_axis_tready,

  // invalidate or immediate data from roce IETH/IMMDT header
  output [C_AXIS_IMMDT_WIDTH-1:0] m_rdma2user_ieth_immdt_axis_tdata,
  output                          m_rdma2user_ieth_immdt_axis_tlast,
  output                          m_rdma2user_ieth_immdt_axis_tvalid,
  input                           m_rdma2user_ieth_immdt_axis_trdy,

  // RDMA AXI MM interface used to store payload from RDMA MAD, Send or Write operation
  output           m_axi_rdma_send_write_payload_store_awid,
  output  [63 : 0] m_axi_rdma_send_write_payload_store_awaddr,
  output  [31 : 0] m_axi_rdma_send_write_payload_store_awuser,
  output   [7 : 0] m_axi_rdma_send_write_payload_store_awlen,
  output   [2 : 0] m_axi_rdma_send_write_payload_store_awsize,
  output   [1 : 0] m_axi_rdma_send_write_payload_store_awburst,
  output   [3 : 0] m_axi_rdma_send_write_payload_store_awcache,
  output   [2 : 0] m_axi_rdma_send_write_payload_store_awprot,
  output           m_axi_rdma_send_write_payload_store_awvalid,
  input            m_axi_rdma_send_write_payload_store_awready,
  output [511 : 0] m_axi_rdma_send_write_payload_store_wdata,
  output  [63 : 0] m_axi_rdma_send_write_payload_store_wstrb,
  output           m_axi_rdma_send_write_payload_store_wlast,
  output           m_axi_rdma_send_write_payload_store_wvalid,
  input            m_axi_rdma_send_write_payload_store_wready,
  output           m_axi_rdma_send_write_payload_store_awlock,
  input            m_axi_rdma_send_write_payload_store_bid,
  input    [1 : 0] m_axi_rdma_send_write_payload_store_bresp,
  input            m_axi_rdma_send_write_payload_store_bvalid,
  output           m_axi_rdma_send_write_payload_store_bready,
  output           m_axi_rdma_send_write_payload_store_arid,
  output  [63 : 0] m_axi_rdma_send_write_payload_store_araddr,
  output   [7 : 0] m_axi_rdma_send_write_payload_store_arlen,
  output   [2 : 0] m_axi_rdma_send_write_payload_store_arsize,
  output   [1 : 0] m_axi_rdma_send_write_payload_store_arburst,
  output   [3 : 0] m_axi_rdma_send_write_payload_store_arcache,
  output   [2 : 0] m_axi_rdma_send_write_payload_store_arprot,
  output           m_axi_rdma_send_write_payload_store_arvalid,
  input            m_axi_rdma_send_write_payload_store_arready,
  input            m_axi_rdma_send_write_payload_store_rid,
  input  [511 : 0] m_axi_rdma_send_write_payload_store_rdata,
  input    [1 : 0] m_axi_rdma_send_write_payload_store_rresp,
  input            m_axi_rdma_send_write_payload_store_rlast,
  input            m_axi_rdma_send_write_payload_store_rvalid,
  output           m_axi_rdma_send_write_payload_store_rready,
  output           m_axi_rdma_send_write_payload_store_arlock,

  // RDMA AXI MM interface used to store payload from RDMA Read response operation
  output           m_axi_rdma_rsp_payload_awid,
  output  [63 : 0] m_axi_rdma_rsp_payload_awaddr,
  output   [7 : 0] m_axi_rdma_rsp_payload_awlen,
  output   [2 : 0] m_axi_rdma_rsp_payload_awsize,
  output   [1 : 0] m_axi_rdma_rsp_payload_awburst,
  output   [3 : 0] m_axi_rdma_rsp_payload_awcache,
  output   [2 : 0] m_axi_rdma_rsp_payload_awprot,
  output           m_axi_rdma_rsp_payload_awvalid,
  input            m_axi_rdma_rsp_payload_awready,
  output [511 : 0] m_axi_rdma_rsp_payload_wdata,
  output  [63 : 0] m_axi_rdma_rsp_payload_wstrb,
  output           m_axi_rdma_rsp_payload_wlast,
  output           m_axi_rdma_rsp_payload_wvalid,
  input            m_axi_rdma_rsp_payload_wready,
  output           m_axi_rdma_rsp_payload_awlock,
  input            m_axi_rdma_rsp_payload_bid,
  input    [1 : 0] m_axi_rdma_rsp_payload_bresp,
  input            m_axi_rdma_rsp_payload_bvalid,
  output           m_axi_rdma_rsp_payload_bready,
  output           m_axi_rdma_rsp_payload_arid,
  output  [63 : 0] m_axi_rdma_rsp_payload_araddr,
  output   [7 : 0] m_axi_rdma_rsp_payload_arlen,
  output   [2 : 0] m_axi_rdma_rsp_payload_arsize,
  output   [1 : 0] m_axi_rdma_rsp_payload_arburst,
  output   [3 : 0] m_axi_rdma_rsp_payload_arcache,
  output   [2 : 0] m_axi_rdma_rsp_payload_arprot,
  output           m_axi_rdma_rsp_payload_arvalid,
  input            m_axi_rdma_rsp_payload_arready,
  input            m_axi_rdma_rsp_payload_rid,
  input  [511 : 0] m_axi_rdma_rsp_payload_rdata,
  input    [1 : 0] m_axi_rdma_rsp_payload_rresp,
  input            m_axi_rdma_rsp_payload_rlast,
  input            m_axi_rdma_rsp_payload_rvalid,
  output           m_axi_rdma_rsp_payload_rready,
  output           m_axi_rdma_rsp_payload_arlock,

  // RDMA AXI MM interface used to fetch WQE entries in the senq queue from DDR by the QP manager
  output           m_axi_qp_get_wqe_awid,
  output  [63 : 0] m_axi_qp_get_wqe_awaddr,
  output   [7 : 0] m_axi_qp_get_wqe_awlen,
  output   [2 : 0] m_axi_qp_get_wqe_awsize,
  output   [1 : 0] m_axi_qp_get_wqe_awburst,
  output   [3 : 0] m_axi_qp_get_wqe_awcache,
  output   [2 : 0] m_axi_qp_get_wqe_awprot,
  output           m_axi_qp_get_wqe_awvalid,
  input            m_axi_qp_get_wqe_awready,
  output [511 : 0] m_axi_qp_get_wqe_wdata,
  output  [63 : 0] m_axi_qp_get_wqe_wstrb,
  output           m_axi_qp_get_wqe_wlast,
  output           m_axi_qp_get_wqe_wvalid,
  input            m_axi_qp_get_wqe_wready,
  output           m_axi_qp_get_wqe_awlock,
  input            m_axi_qp_get_wqe_bid,
  input    [1 : 0] m_axi_qp_get_wqe_bresp,
  input            m_axi_qp_get_wqe_bvalid,
  output           m_axi_qp_get_wqe_bready,
  output           m_axi_qp_get_wqe_arid,
  output  [63 : 0] m_axi_qp_get_wqe_araddr,
  output   [7 : 0] m_axi_qp_get_wqe_arlen,
  output   [2 : 0] m_axi_qp_get_wqe_arsize,
  output   [1 : 0] m_axi_qp_get_wqe_arburst,
  output   [3 : 0] m_axi_qp_get_wqe_arcache,
  output   [2 : 0] m_axi_qp_get_wqe_arprot,
  output           m_axi_qp_get_wqe_arvalid,
  input            m_axi_qp_get_wqe_arready,
  input            m_axi_qp_get_wqe_rid,
  input  [511 : 0] m_axi_qp_get_wqe_rdata,
  input    [1 : 0] m_axi_qp_get_wqe_rresp,
  input            m_axi_qp_get_wqe_rlast,
  input            m_axi_qp_get_wqe_rvalid,
  output           m_axi_qp_get_wqe_rready,
  output           m_axi_qp_get_wqe_arlock,

  // TODO: In the current implementation, we do not consider retry buffer
  // RDMA AXI MM interface used to store payload of an outgoing RDMA write packet to a retry buffer
  output           m_axi_payload_to_retry_buf_awid,
  output  [63 : 0] m_axi_payload_to_retry_buf_awaddr,
  output   [7 : 0] m_axi_payload_to_retry_buf_awlen,
  output   [2 : 0] m_axi_payload_to_retry_buf_awsize,
  output   [1 : 0] m_axi_payload_to_retry_buf_awburst,
  output   [3 : 0] m_axi_payload_to_retry_buf_awcache,
  output   [2 : 0] m_axi_payload_to_retry_buf_awprot,
  output           m_axi_payload_to_retry_buf_awvalid,
  input            m_axi_payload_to_retry_buf_awready,
  output [511 : 0] m_axi_payload_to_retry_buf_wdata,
  output  [63 : 0] m_axi_payload_to_retry_buf_wstrb,
  output           m_axi_payload_to_retry_buf_wlast,
  output           m_axi_payload_to_retry_buf_wvalid,
  input            m_axi_payload_to_retry_buf_wready,
  output           m_axi_payload_to_retry_buf_awlock,
  input            m_axi_payload_to_retry_buf_bid,
  input    [1 : 0] m_axi_payload_to_retry_buf_bresp,
  input            m_axi_payload_to_retry_buf_bvalid,
  output           m_axi_payload_to_retry_buf_bready,
  output           m_axi_payload_to_retry_buf_arid,
  output  [63 : 0] m_axi_payload_to_retry_buf_araddr,
  output   [7 : 0] m_axi_payload_to_retry_buf_arlen,
  output   [2 : 0] m_axi_payload_to_retry_buf_arsize,
  output   [1 : 0] m_axi_payload_to_retry_buf_arburst,
  output   [3 : 0] m_axi_payload_to_retry_buf_arcache,
  output   [2 : 0] m_axi_payload_to_retry_buf_arprot,
  output           m_axi_payload_to_retry_buf_arvalid,
  input            m_axi_payload_to_retry_buf_arready,
  input            m_axi_payload_to_retry_buf_rid,
  input  [511 : 0] m_axi_payload_to_retry_buf_rdata,
  input    [1 : 0] m_axi_payload_to_retry_buf_rresp,
  input            m_axi_payload_to_retry_buf_rlast,
  input            m_axi_payload_to_retry_buf_rvalid,
  output           m_axi_payload_to_retry_buf_rready,
  output           m_axi_payload_to_retry_buf_arlock,

  // RDMA AXI MM interface used to get payload of an outgoing RDMA send/write and read response packets
  output           m_axi_pktgen_get_payload_awid,
  output  [63 : 0] m_axi_pktgen_get_payload_awaddr,
  output   [7 : 0] m_axi_pktgen_get_payload_awlen,
  output   [2 : 0] m_axi_pktgen_get_payload_awsize,
  output   [1 : 0] m_axi_pktgen_get_payload_awburst,
  output   [3 : 0] m_axi_pktgen_get_payload_awcache,
  output   [2 : 0] m_axi_pktgen_get_payload_awprot,
  output           m_axi_pktgen_get_payload_awvalid,
  input            m_axi_pktgen_get_payload_awready,
  output [511 : 0] m_axi_pktgen_get_payload_wdata,
  output  [63 : 0] m_axi_pktgen_get_payload_wstrb,
  output           m_axi_pktgen_get_payload_wlast,
  output           m_axi_pktgen_get_payload_wvalid,
  input            m_axi_pktgen_get_payload_wready,
  output           m_axi_pktgen_get_payload_awlock,
  input            m_axi_pktgen_get_payload_bid,
  input    [1 : 0] m_axi_pktgen_get_payload_bresp,
  input            m_axi_pktgen_get_payload_bvalid,
  output           m_axi_pktgen_get_payload_bready,
  output           m_axi_pktgen_get_payload_arid,
  output  [63 : 0] m_axi_pktgen_get_payload_araddr,
  output   [7 : 0] m_axi_pktgen_get_payload_arlen,
  output   [2 : 0] m_axi_pktgen_get_payload_arsize,
  output   [1 : 0] m_axi_pktgen_get_payload_arburst,
  output   [3 : 0] m_axi_pktgen_get_payload_arcache,
  output   [2 : 0] m_axi_pktgen_get_payload_arprot,
  output           m_axi_pktgen_get_payload_arvalid,
  input            m_axi_pktgen_get_payload_arready,
  input            m_axi_pktgen_get_payload_rid,
  input  [511 : 0] m_axi_pktgen_get_payload_rdata,
  input    [1 : 0] m_axi_pktgen_get_payload_rresp,
  input            m_axi_pktgen_get_payload_rlast,
  input            m_axi_pktgen_get_payload_rvalid,
  output           m_axi_pktgen_get_payload_rready,
  output           m_axi_pktgen_get_payload_arlock,

  // RDMA AXI MM interface used to write completion entries to a completion queue in the DDR
  output           m_axi_write_completion_awid,
  output  [63 : 0] m_axi_write_completion_awaddr,
  output   [7 : 0] m_axi_write_completion_awlen,
  output   [2 : 0] m_axi_write_completion_awsize,
  output   [1 : 0] m_axi_write_completion_awburst,
  output   [3 : 0] m_axi_write_completion_awcache,
  output   [2 : 0] m_axi_write_completion_awprot,
  output           m_axi_write_completion_awvalid,
  input            m_axi_write_completion_awready,
  output [511 : 0] m_axi_write_completion_wdata,
  output  [63 : 0] m_axi_write_completion_wstrb,
  output           m_axi_write_completion_wlast,
  output           m_axi_write_completion_wvalid,
  input            m_axi_write_completion_wready,
  output           m_axi_write_completion_awlock,
  input            m_axi_write_completion_bid,
  input    [1 : 0] m_axi_write_completion_bresp,
  input            m_axi_write_completion_bvalid,
  output           m_axi_write_completion_bready,
  output           m_axi_write_completion_arid,
  output  [63 : 0] m_axi_write_completion_araddr,
  output   [7 : 0] m_axi_write_completion_arlen,
  output   [2 : 0] m_axi_write_completion_arsize,
  output   [1 : 0] m_axi_write_completion_arburst,
  output   [3 : 0] m_axi_write_completion_arcache,
  output   [2 : 0] m_axi_write_completion_arprot,
  output           m_axi_write_completion_arvalid,
  input            m_axi_write_completion_arready,
  input            m_axi_write_completion_rid,
  input  [511 : 0] m_axi_write_completion_rdata,
  input    [1 : 0] m_axi_write_completion_rresp,
  input            m_axi_write_completion_rlast,
  input            m_axi_write_completion_rvalid,
  output           m_axi_write_completion_rready,
  output           m_axi_write_completion_arlock,

  // TODO: In the current implementation, we do not consider hardware handshaking from user logic
  // Send WQE completion queue doorbell
  output           resp_hndler_o_send_cq_db_cnt_valid,
  output     [9:0] resp_hndler_o_send_cq_db_addr,
  output    [31:0] resp_hndler_o_send_cq_db_cnt,
  input            resp_hndler_i_send_cq_db_rdy,

  // Send WQE producer index doorbell
  input     [15:0] i_qp_sq_pidb_hndshk,
  input     [31:0] i_qp_sq_pidb_wr_addr_hndshk,
  input            i_qp_sq_pidb_wr_valid_hndshk,
  output           o_qp_sq_pidb_wr_rdy,

  // RDMA-Send consumer index doorbell
  input     [15:0] i_qp_rq_cidb_hndshk,
  input     [31:0] i_qp_rq_cidb_wr_addr_hndshk,
  input            i_qp_rq_cidb_wr_valid_hndshk,
  output           o_qp_rq_cidb_wr_rdy,

  // RDMA-Send producer index doorbell
  output    [31:0] rx_pkt_hndler_o_rq_db_data,
  output     [9:0] rx_pkt_hndler_o_rq_db_addr,
  output           rx_pkt_hndler_o_rq_db_data_valid,
  input            rx_pkt_hndler_i_rq_db_rdy,

  output           rnic_intr,

  input  mod_rstn,
  output mod_rst_done,
  output rdma_resetn_done,
  input  axil_clk,
  input  axis_clk
);

logic axil_rstn;
logic axis_rstn;

logic [8:0] stat_rx_pause_req;
logic [8:0] ctl_tx_pause_req;
logic       ctl_tx_resend_pause;

logic o_global_dbg_cnt_en;
logic o_global_dbg_cnt_clr;

generic_reset #(
  .NUM_INPUT_CLK  (2),
  .RESET_DURATION (100)
) reset_inst (
  .mod_rstn     (mod_rstn),
  .mod_rst_done (mod_rst_done),
  .clk          ({axis_clk, axil_clk}),
  .rstn         ({axis_rstn, axil_rstn})
);

rdma_subsystem #(
  .C_AXIS_DATA_WIDTH (C_AXIS_DATA_WIDTH),
  .C_AXIS_KEEP_WIDTH (C_AXIS_KEEP_WIDTH),
  .C_AXIS_IMMDT_WIDTH(C_AXIS_IMMDT_WIDTH)
) rdma_subsystem_inst (
  // AXIL interface for RDMA control register
  .s_axil_awaddr     (s_axil_awaddr),
  .s_axil_awvalid    (s_axil_awvalid),
  .s_axil_awready    (s_axil_awready),
  .s_axil_wdata      (s_axil_wdata),
  .s_axil_wstrb      (s_axil_wstrb),
  .s_axil_wvalid     (s_axil_wvalid),
  .s_axil_wready     (s_axil_wready),
  .s_axil_araddr     (s_axil_araddr),
  .s_axil_arvalid    (s_axil_arvalid),
  .s_axil_arready    (s_axil_arready),
  .s_axil_rdata      (s_axil_rdata),
  .s_axil_rvalid     (s_axil_rvalid),
  .s_axil_rresp      (s_axil_rresp),
  .s_axil_rready     (s_axil_rready),
  .s_axil_bresp      (s_axil_bresp),
  .s_axil_bvalid     (s_axil_bvalid),
  .s_axil_bready     (s_axil_bready),

  // RDMA TX interface (including roce and non-roce packets) to CMAC TX path
  .m_rdma2cmac_axis_tdata  (m_rdma2cmac_axis_tdata),
  .m_rdma2cmac_axis_tkeep  (m_rdma2cmac_axis_tkeep),
  .m_rdma2cmac_axis_tvalid (m_rdma2cmac_axis_tvalid),
  .m_rdma2cmac_axis_tlast  (m_rdma2cmac_axis_tlast),
  .m_rdma2cmac_axis_tready (m_rdma2cmac_axis_tready),

  // Non-RDMA packets from QDMA TX bypassing RDMA TX
  .s_qdma2rdma_non_roce_axis_tdata  (s_qdma2rdma_non_roce_axis_tdata),
  .s_qdma2rdma_non_roce_axis_tkeep  (s_qdma2rdma_non_roce_axis_tkeep),
  .s_qdma2rdma_non_roce_axis_tvalid (s_qdma2rdma_non_roce_axis_tvalid),
  .s_qdma2rdma_non_roce_axis_tlast  (s_qdma2rdma_non_roce_axis_tlast),
  .s_qdma2rdma_non_roce_axis_tready (s_qdma2rdma_non_roce_axis_tready),

  // RDMA RX interface from CMAC RX, no rx backpressure
  .s_cmac2rdma_roce_axis_tdata   (s_cmac2rdma_roce_axis_tdata),
  .s_cmac2rdma_roce_axis_tkeep   (s_cmac2rdma_roce_axis_tkeep),
  .s_cmac2rdma_roce_axis_tvalid  (s_cmac2rdma_roce_axis_tvalid),
  .s_cmac2rdma_roce_axis_tlast   (s_cmac2rdma_roce_axis_tlast),
  .s_cmac2rdma_roce_axis_tuser   (s_cmac2rdma_roce_axis_tuser),

  // Non-RDMA packets from CMAC RX bypassing RDMA, no rx backpressure
  .s_cmac2rdma_non_roce_axis_tdata  (s_cmac2rdma_non_roce_axis_tdata),
  .s_cmac2rdma_non_roce_axis_tkeep  (s_cmac2rdma_non_roce_axis_tkeep),
  .s_cmac2rdma_non_roce_axis_tvalid (s_cmac2rdma_non_roce_axis_tvalid),
  .s_cmac2rdma_non_roce_axis_tlast  (s_cmac2rdma_non_roce_axis_tlast),
  .s_cmac2rdma_non_roce_axis_tuser  (s_cmac2rdma_non_roce_axis_tuser),

  // Non-RDMA packets bypassing RDMA to QDMA RX
  .m_rdma2qdma_non_roce_axis_tdata   (m_rdma2qdma_non_roce_axis_tdata),
  .m_rdma2qdma_non_roce_axis_tkeep   (m_rdma2qdma_non_roce_axis_tkeep),
  .m_rdma2qdma_non_roce_axis_tvalid  (m_rdma2qdma_non_roce_axis_tvalid),
  .m_rdma2qdma_non_roce_axis_tlast   (m_rdma2qdma_non_roce_axis_tlast),
  .m_rdma2qdma_non_roce_axis_tready  (m_rdma2qdma_non_roce_axis_tready),

  // invalidate or immediate data from roce IETH/IMMDT header
  .m_rdma2user_ieth_immdt_axis_tdata   (m_rdma2user_ieth_immdt_axis_tdata),
  .m_rdma2user_ieth_immdt_axis_tlast   (m_rdma2user_ieth_immdt_axis_tlast),
  .m_rdma2user_ieth_immdt_axis_tvalid  (m_rdma2user_ieth_immdt_axis_tvalid),
  .m_rdma2user_ieth_immdt_axis_trdy    (m_rdma2user_ieth_immdt_axis_trdy),

  // RDMA AXI MM interface used to store payload from RDMA MAD, Send or Write operation
  .m_axi_rdma_send_write_payload_store_awid        (m_axi_rdma_send_write_payload_store_awid),
  .m_axi_rdma_send_write_payload_store_awaddr      (m_axi_rdma_send_write_payload_store_awaddr),
  .m_axi_rdma_send_write_payload_store_awuser      (m_axi_rdma_send_write_payload_store_awuser),
  .m_axi_rdma_send_write_payload_store_awlen       (m_axi_rdma_send_write_payload_store_awlen),
  .m_axi_rdma_send_write_payload_store_awsize      (m_axi_rdma_send_write_payload_store_awsize),
  .m_axi_rdma_send_write_payload_store_awburst     (m_axi_rdma_send_write_payload_store_awburst),
  .m_axi_rdma_send_write_payload_store_awcache     (m_axi_rdma_send_write_payload_store_awcache),
  .m_axi_rdma_send_write_payload_store_awprot      (m_axi_rdma_send_write_payload_store_awprot),
  .m_axi_rdma_send_write_payload_store_awvalid     (m_axi_rdma_send_write_payload_store_awvalid),
  .m_axi_rdma_send_write_payload_store_awready     (m_axi_rdma_send_write_payload_store_awready),
  .m_axi_rdma_send_write_payload_store_wdata       (m_axi_rdma_send_write_payload_store_wdata),
  .m_axi_rdma_send_write_payload_store_wstrb       (m_axi_rdma_send_write_payload_store_wstrb),
  .m_axi_rdma_send_write_payload_store_wlast       (m_axi_rdma_send_write_payload_store_wlast),
  .m_axi_rdma_send_write_payload_store_wvalid      (m_axi_rdma_send_write_payload_store_wvalid),
  .m_axi_rdma_send_write_payload_store_wready      (m_axi_rdma_send_write_payload_store_wready),
  .m_axi_rdma_send_write_payload_store_awlock      (m_axi_rdma_send_write_payload_store_awlock),
  .m_axi_rdma_send_write_payload_store_bid         (m_axi_rdma_send_write_payload_store_bid),
  .m_axi_rdma_send_write_payload_store_bresp       (m_axi_rdma_send_write_payload_store_bresp),
  .m_axi_rdma_send_write_payload_store_bvalid      (m_axi_rdma_send_write_payload_store_bvalid),
  .m_axi_rdma_send_write_payload_store_bready      (m_axi_rdma_send_write_payload_store_bready),
  .m_axi_rdma_send_write_payload_store_arid        (m_axi_rdma_send_write_payload_store_arid),
  .m_axi_rdma_send_write_payload_store_araddr      (m_axi_rdma_send_write_payload_store_araddr),
  .m_axi_rdma_send_write_payload_store_arlen       (m_axi_rdma_send_write_payload_store_arlen),
  .m_axi_rdma_send_write_payload_store_arsize      (m_axi_rdma_send_write_payload_store_arsize),
  .m_axi_rdma_send_write_payload_store_arburst     (m_axi_rdma_send_write_payload_store_arburst),
  .m_axi_rdma_send_write_payload_store_arcache     (m_axi_rdma_send_write_payload_store_arcache),
  .m_axi_rdma_send_write_payload_store_arprot      (m_axi_rdma_send_write_payload_store_arprot),
  .m_axi_rdma_send_write_payload_store_arvalid     (m_axi_rdma_send_write_payload_store_arvalid),
  .m_axi_rdma_send_write_payload_store_arready     (m_axi_rdma_send_write_payload_store_arready),
  .m_axi_rdma_send_write_payload_store_rid         (m_axi_rdma_send_write_payload_store_rid),
  .m_axi_rdma_send_write_payload_store_rdata       (m_axi_rdma_send_write_payload_store_rdata),
  .m_axi_rdma_send_write_payload_store_rresp       (m_axi_rdma_send_write_payload_store_rresp),
  .m_axi_rdma_send_write_payload_store_rlast       (m_axi_rdma_send_write_payload_store_rlast),
  .m_axi_rdma_send_write_payload_store_rvalid      (m_axi_rdma_send_write_payload_store_rvalid),
  .m_axi_rdma_send_write_payload_store_rready      (m_axi_rdma_send_write_payload_store_rready),
  .m_axi_rdma_send_write_payload_store_arlock      (m_axi_rdma_send_write_payload_store_arlock),

  // RDMA AXI MM interface used to store payload from RDMA Read response operation
  .m_axi_rdma_rsp_payload_awid                (m_axi_rdma_rsp_payload_awid),
  .m_axi_rdma_rsp_payload_awaddr              (m_axi_rdma_rsp_payload_awaddr),
  .m_axi_rdma_rsp_payload_awlen               (m_axi_rdma_rsp_payload_awlen),
  .m_axi_rdma_rsp_payload_awsize              (m_axi_rdma_rsp_payload_awsize),
  .m_axi_rdma_rsp_payload_awburst             (m_axi_rdma_rsp_payload_awburst),
  .m_axi_rdma_rsp_payload_awcache             (m_axi_rdma_rsp_payload_awcache),
  .m_axi_rdma_rsp_payload_awprot              (m_axi_rdma_rsp_payload_awprot),
  .m_axi_rdma_rsp_payload_awvalid             (m_axi_rdma_rsp_payload_awvalid),
  .m_axi_rdma_rsp_payload_awready             (m_axi_rdma_rsp_payload_awready),
  .m_axi_rdma_rsp_payload_wdata               (m_axi_rdma_rsp_payload_wdata),
  .m_axi_rdma_rsp_payload_wstrb               (m_axi_rdma_rsp_payload_wstrb),
  .m_axi_rdma_rsp_payload_wlast               (m_axi_rdma_rsp_payload_wlast),
  .m_axi_rdma_rsp_payload_wvalid              (m_axi_rdma_rsp_payload_wvalid),
  .m_axi_rdma_rsp_payload_wready              (m_axi_rdma_rsp_payload_wready),
  .m_axi_rdma_rsp_payload_awlock              (m_axi_rdma_rsp_payload_awlock),
  .m_axi_rdma_rsp_payload_bid                 (m_axi_rdma_rsp_payload_bid),
  .m_axi_rdma_rsp_payload_bresp               (m_axi_rdma_rsp_payload_bresp),
  .m_axi_rdma_rsp_payload_bvalid              (m_axi_rdma_rsp_payload_bvalid),
  .m_axi_rdma_rsp_payload_bready              (m_axi_rdma_rsp_payload_bready),
  .m_axi_rdma_rsp_payload_arid                (m_axi_rdma_rsp_payload_arid),
  .m_axi_rdma_rsp_payload_araddr              (m_axi_rdma_rsp_payload_araddr),
  .m_axi_rdma_rsp_payload_arlen               (m_axi_rdma_rsp_payload_arlen),
  .m_axi_rdma_rsp_payload_arsize              (m_axi_rdma_rsp_payload_arsize),
  .m_axi_rdma_rsp_payload_arburst             (m_axi_rdma_rsp_payload_arburst),
  .m_axi_rdma_rsp_payload_arcache             (m_axi_rdma_rsp_payload_arcache),
  .m_axi_rdma_rsp_payload_arprot              (m_axi_rdma_rsp_payload_arprot),
  .m_axi_rdma_rsp_payload_arvalid             (m_axi_rdma_rsp_payload_arvalid),
  .m_axi_rdma_rsp_payload_arready             (m_axi_rdma_rsp_payload_arready),
  .m_axi_rdma_rsp_payload_rid                 (m_axi_rdma_rsp_payload_rid),
  .m_axi_rdma_rsp_payload_rdata               (m_axi_rdma_rsp_payload_rdata),
  .m_axi_rdma_rsp_payload_rresp               (m_axi_rdma_rsp_payload_rresp),
  .m_axi_rdma_rsp_payload_rlast               (m_axi_rdma_rsp_payload_rlast),
  .m_axi_rdma_rsp_payload_rvalid              (m_axi_rdma_rsp_payload_rvalid),
  .m_axi_rdma_rsp_payload_rready              (m_axi_rdma_rsp_payload_rready),
  .m_axi_rdma_rsp_payload_arlock              (m_axi_rdma_rsp_payload_arlock),

  // RDMA AXI MM interface used to fetch WQE entries in the senq queue from DDR by the QP manager
  .m_axi_qp_get_wqe_awid                (m_axi_qp_get_wqe_awid),
  .m_axi_qp_get_wqe_awaddr              (m_axi_qp_get_wqe_awaddr),
  .m_axi_qp_get_wqe_awlen               (m_axi_qp_get_wqe_awlen),
  .m_axi_qp_get_wqe_awsize              (m_axi_qp_get_wqe_awsize),
  .m_axi_qp_get_wqe_awburst             (m_axi_qp_get_wqe_awburst),
  .m_axi_qp_get_wqe_awcache             (m_axi_qp_get_wqe_awcache),
  .m_axi_qp_get_wqe_awprot              (m_axi_qp_get_wqe_awprot),
  .m_axi_qp_get_wqe_awvalid             (m_axi_qp_get_wqe_awvalid),
  .m_axi_qp_get_wqe_awready             (m_axi_qp_get_wqe_awready),
  .m_axi_qp_get_wqe_wdata               (m_axi_qp_get_wqe_wdata),
  .m_axi_qp_get_wqe_wstrb               (m_axi_qp_get_wqe_wstrb),
  .m_axi_qp_get_wqe_wlast               (m_axi_qp_get_wqe_wlast),
  .m_axi_qp_get_wqe_wvalid              (m_axi_qp_get_wqe_wvalid),
  .m_axi_qp_get_wqe_wready              (m_axi_qp_get_wqe_wready),
  .m_axi_qp_get_wqe_awlock              (m_axi_qp_get_wqe_awlock),
  .m_axi_qp_get_wqe_bid                 (m_axi_qp_get_wqe_bid),
  .m_axi_qp_get_wqe_bresp               (m_axi_qp_get_wqe_bresp),
  .m_axi_qp_get_wqe_bvalid              (m_axi_qp_get_wqe_bvalid),
  .m_axi_qp_get_wqe_bready              (m_axi_qp_get_wqe_bready),
  .m_axi_qp_get_wqe_arid                (m_axi_qp_get_wqe_arid),
  .m_axi_qp_get_wqe_araddr              (m_axi_qp_get_wqe_araddr),
  .m_axi_qp_get_wqe_arlen               (m_axi_qp_get_wqe_arlen),
  .m_axi_qp_get_wqe_arsize              (m_axi_qp_get_wqe_arsize),
  .m_axi_qp_get_wqe_arburst             (m_axi_qp_get_wqe_arburst),
  .m_axi_qp_get_wqe_arcache             (m_axi_qp_get_wqe_arcache),
  .m_axi_qp_get_wqe_arprot              (m_axi_qp_get_wqe_arprot),
  .m_axi_qp_get_wqe_arvalid             (m_axi_qp_get_wqe_arvalid),
  .m_axi_qp_get_wqe_arready             (m_axi_qp_get_wqe_arready),
  .m_axi_qp_get_wqe_rid                 (m_axi_qp_get_wqe_rid),
  .m_axi_qp_get_wqe_rdata               (m_axi_qp_get_wqe_rdata),
  .m_axi_qp_get_wqe_rresp               (m_axi_qp_get_wqe_rresp),
  .m_axi_qp_get_wqe_rlast               (m_axi_qp_get_wqe_rlast),
  .m_axi_qp_get_wqe_rvalid              (m_axi_qp_get_wqe_rvalid),
  .m_axi_qp_get_wqe_rready              (m_axi_qp_get_wqe_rready),
  .m_axi_qp_get_wqe_arlock              (m_axi_qp_get_wqe_arlock),

  // TODO: In the current implementation, we do not consider retry buffer
  // RDMA AXI MM interface used to store payload of an outgoing RDMA write packet to a retry buffer
  .m_axi_payload_to_retry_buf_awid       (m_axi_payload_to_retry_buf_awid),
  .m_axi_payload_to_retry_buf_awaddr     (m_axi_payload_to_retry_buf_awaddr),
  .m_axi_payload_to_retry_buf_awlen      (m_axi_payload_to_retry_buf_awlen),
  .m_axi_payload_to_retry_buf_awsize     (m_axi_payload_to_retry_buf_awsize),
  .m_axi_payload_to_retry_buf_awburst    (m_axi_payload_to_retry_buf_awburst),
  .m_axi_payload_to_retry_buf_awcache    (m_axi_payload_to_retry_buf_awcache),
  .m_axi_payload_to_retry_buf_awprot     (m_axi_payload_to_retry_buf_awprot),
  .m_axi_payload_to_retry_buf_awvalid    (m_axi_payload_to_retry_buf_awvalid),
  .m_axi_payload_to_retry_buf_awready    (m_axi_payload_to_retry_buf_awready),
  .m_axi_payload_to_retry_buf_wdata      (m_axi_payload_to_retry_buf_wdata),
  .m_axi_payload_to_retry_buf_wstrb      (m_axi_payload_to_retry_buf_wstrb),
  .m_axi_payload_to_retry_buf_wlast      (m_axi_payload_to_retry_buf_wlast),
  .m_axi_payload_to_retry_buf_wvalid     (m_axi_payload_to_retry_buf_wvalid),
  .m_axi_payload_to_retry_buf_wready     (m_axi_payload_to_retry_buf_wready),
  .m_axi_payload_to_retry_buf_awlock     (m_axi_payload_to_retry_buf_awlock),
  .m_axi_payload_to_retry_buf_bid        (m_axi_payload_to_retry_buf_bid),
  .m_axi_payload_to_retry_buf_bresp      (m_axi_payload_to_retry_buf_bresp),
  .m_axi_payload_to_retry_buf_bvalid     (m_axi_payload_to_retry_buf_bvalid),
  .m_axi_payload_to_retry_buf_bready     (m_axi_payload_to_retry_buf_bready),
  .m_axi_payload_to_retry_buf_arid       (m_axi_payload_to_retry_buf_arid),
  .m_axi_payload_to_retry_buf_araddr     (m_axi_payload_to_retry_buf_araddr),
  .m_axi_payload_to_retry_buf_arlen      (m_axi_payload_to_retry_buf_arlen),
  .m_axi_payload_to_retry_buf_arsize     (m_axi_payload_to_retry_buf_arsize),
  .m_axi_payload_to_retry_buf_arburst    (m_axi_payload_to_retry_buf_arburst),
  .m_axi_payload_to_retry_buf_arcache    (m_axi_payload_to_retry_buf_arcache),
  .m_axi_payload_to_retry_buf_arprot     (m_axi_payload_to_retry_buf_arprot),
  .m_axi_payload_to_retry_buf_arvalid    (m_axi_payload_to_retry_buf_arvalid),
  .m_axi_payload_to_retry_buf_arready    (m_axi_payload_to_retry_buf_arready),
  .m_axi_payload_to_retry_buf_rid        (m_axi_payload_to_retry_buf_rid),
  .m_axi_payload_to_retry_buf_rdata      (m_axi_payload_to_retry_buf_rdata),
  .m_axi_payload_to_retry_buf_rresp      (m_axi_payload_to_retry_buf_rresp),
  .m_axi_payload_to_retry_buf_rlast      (m_axi_payload_to_retry_buf_rlast),
  .m_axi_payload_to_retry_buf_rvalid     (m_axi_payload_to_retry_buf_rvalid),
  .m_axi_payload_to_retry_buf_rready     (m_axi_payload_to_retry_buf_rready),
  .m_axi_payload_to_retry_buf_arlock     (m_axi_payload_to_retry_buf_arlock),

  // RDMA AXI MM interface used to get payload of an outgoing RDMA send/write and read response packets
  .m_axi_pktgen_get_payload_awid          (m_axi_pktgen_get_payload_awid),
  .m_axi_pktgen_get_payload_awaddr        (m_axi_pktgen_get_payload_awaddr),
  .m_axi_pktgen_get_payload_awlen         (m_axi_pktgen_get_payload_awlen),
  .m_axi_pktgen_get_payload_awsize        (m_axi_pktgen_get_payload_awsize),
  .m_axi_pktgen_get_payload_awburst       (m_axi_pktgen_get_payload_awburst),
  .m_axi_pktgen_get_payload_awcache       (m_axi_pktgen_get_payload_awcache),
  .m_axi_pktgen_get_payload_awprot        (m_axi_pktgen_get_payload_awprot),
  .m_axi_pktgen_get_payload_awvalid       (m_axi_pktgen_get_payload_awvalid),
  .m_axi_pktgen_get_payload_awready       (m_axi_pktgen_get_payload_awready),
  .m_axi_pktgen_get_payload_wdata         (m_axi_pktgen_get_payload_wdata),
  .m_axi_pktgen_get_payload_wstrb         (m_axi_pktgen_get_payload_wstrb),
  .m_axi_pktgen_get_payload_wlast         (m_axi_pktgen_get_payload_wlast),
  .m_axi_pktgen_get_payload_wvalid        (m_axi_pktgen_get_payload_wvalid),
  .m_axi_pktgen_get_payload_wready        (m_axi_pktgen_get_payload_wready),
  .m_axi_pktgen_get_payload_awlock        (m_axi_pktgen_get_payload_awlock),
  .m_axi_pktgen_get_payload_bid           (m_axi_pktgen_get_payload_bid),
  .m_axi_pktgen_get_payload_bresp         (m_axi_pktgen_get_payload_bresp),
  .m_axi_pktgen_get_payload_bvalid        (m_axi_pktgen_get_payload_bvalid),
  .m_axi_pktgen_get_payload_bready        (m_axi_pktgen_get_payload_bready),
  .m_axi_pktgen_get_payload_arid          (m_axi_pktgen_get_payload_arid),
  .m_axi_pktgen_get_payload_araddr        (m_axi_pktgen_get_payload_araddr),
  .m_axi_pktgen_get_payload_arlen         (m_axi_pktgen_get_payload_arlen),
  .m_axi_pktgen_get_payload_arsize        (m_axi_pktgen_get_payload_arsize),
  .m_axi_pktgen_get_payload_arburst       (m_axi_pktgen_get_payload_arburst),
  .m_axi_pktgen_get_payload_arcache       (m_axi_pktgen_get_payload_arcache),
  .m_axi_pktgen_get_payload_arprot        (m_axi_pktgen_get_payload_arprot),
  .m_axi_pktgen_get_payload_arvalid       (m_axi_pktgen_get_payload_arvalid),
  .m_axi_pktgen_get_payload_arready       (m_axi_pktgen_get_payload_arready),
  .m_axi_pktgen_get_payload_rid           (m_axi_pktgen_get_payload_rid),
  .m_axi_pktgen_get_payload_rdata         (m_axi_pktgen_get_payload_rdata),
  .m_axi_pktgen_get_payload_rresp         (m_axi_pktgen_get_payload_rresp),
  .m_axi_pktgen_get_payload_rlast         (m_axi_pktgen_get_payload_rlast),
  .m_axi_pktgen_get_payload_rvalid        (m_axi_pktgen_get_payload_rvalid),
  .m_axi_pktgen_get_payload_rready        (m_axi_pktgen_get_payload_rready),
  .m_axi_pktgen_get_payload_arlock        (m_axi_pktgen_get_payload_arlock),

  // RDMA AXI MM interface used to write completion entries to a completion queue in the DDR
  .m_axi_write_completion_awid       (m_axi_write_completion_awid),
  .m_axi_write_completion_awaddr     (m_axi_write_completion_awaddr),
  .m_axi_write_completion_awlen      (m_axi_write_completion_awlen),
  .m_axi_write_completion_awsize     (m_axi_write_completion_awsize),
  .m_axi_write_completion_awburst    (m_axi_write_completion_awburst),
  .m_axi_write_completion_awcache    (m_axi_write_completion_awcache),
  .m_axi_write_completion_awprot     (m_axi_write_completion_awprot),
  .m_axi_write_completion_awvalid    (m_axi_write_completion_awvalid),
  .m_axi_write_completion_awready    (m_axi_write_completion_awready),
  .m_axi_write_completion_wdata      (m_axi_write_completion_wdata),
  .m_axi_write_completion_wstrb      (m_axi_write_completion_wstrb),
  .m_axi_write_completion_wlast      (m_axi_write_completion_wlast),
  .m_axi_write_completion_wvalid     (m_axi_write_completion_wvalid),
  .m_axi_write_completion_wready     (m_axi_write_completion_wready),
  .m_axi_write_completion_awlock     (m_axi_write_completion_awlock),
  .m_axi_write_completion_bid        (m_axi_write_completion_bid),
  .m_axi_write_completion_bresp      (m_axi_write_completion_bresp),
  .m_axi_write_completion_bvalid     (m_axi_write_completion_bvalid),
  .m_axi_write_completion_bready     (m_axi_write_completion_bready),
  .m_axi_write_completion_arid       (m_axi_write_completion_arid),
  .m_axi_write_completion_araddr     (m_axi_write_completion_araddr),
  .m_axi_write_completion_arlen      (m_axi_write_completion_arlen),
  .m_axi_write_completion_arsize     (m_axi_write_completion_arsize),
  .m_axi_write_completion_arburst    (m_axi_write_completion_arburst),
  .m_axi_write_completion_arcache    (m_axi_write_completion_arcache),
  .m_axi_write_completion_arprot     (m_axi_write_completion_arprot),
  .m_axi_write_completion_arvalid    (m_axi_write_completion_arvalid),
  .m_axi_write_completion_arready    (m_axi_write_completion_arready),
  .m_axi_write_completion_rid        (m_axi_write_completion_rid),
  .m_axi_write_completion_rdata      (m_axi_write_completion_rdata),
  .m_axi_write_completion_rresp      (m_axi_write_completion_rresp),
  .m_axi_write_completion_rlast      (m_axi_write_completion_rlast),
  .m_axi_write_completion_rvalid     (m_axi_write_completion_rvalid),
  .m_axi_write_completion_rready     (m_axi_write_completion_rready),
  .m_axi_write_completion_arlock     (m_axi_write_completion_arlock),

  // TODO: In the current implementation, we do not consider hardware handshaking from user logic
  // HW handshaking from user logic: Send WQE completion queue doorbell
  .resp_hndler_o_send_cq_db_cnt_valid (resp_hndler_o_send_cq_db_cnt_valid),
  .resp_hndler_o_send_cq_db_addr      (resp_hndler_o_send_cq_db_addr),
  .resp_hndler_o_send_cq_db_cnt       (resp_hndler_o_send_cq_db_cnt),
  .resp_hndler_i_send_cq_db_rdy       (resp_hndler_i_send_cq_db_rdy),

  // HW handshaking from user logic: Send WQE producer index doorbell
  .i_qp_sq_pidb_hndshk           (i_qp_sq_pidb_hndshk),
  .i_qp_sq_pidb_wr_addr_hndshk   (i_qp_sq_pidb_wr_addr_hndshk),
  .i_qp_sq_pidb_wr_valid_hndshk  (i_qp_sq_pidb_wr_valid_hndshk),
  .o_qp_sq_pidb_wr_rdy           (o_qp_sq_pidb_wr_rdy),

  // HW handshaking from user logic: RDMA-Send consumer index doorbell
  .i_qp_rq_cidb_hndshk           (i_qp_rq_cidb_hndshk),
  .i_qp_rq_cidb_wr_addr_hndshk   (i_qp_rq_cidb_wr_addr_hndshk),
  .i_qp_rq_cidb_wr_valid_hndshk  (i_qp_rq_cidb_wr_valid_hndshk),
  .o_qp_rq_cidb_wr_rdy           (o_qp_rq_cidb_wr_rdy),

  // HW handshaking from user logic: RDMA-Send producer index doorbell
  .rx_pkt_hndler_o_rq_db_data        (rx_pkt_hndler_o_rq_db_data),
  .rx_pkt_hndler_o_rq_db_addr        (rx_pkt_hndler_o_rq_db_addr),
  .rx_pkt_hndler_o_rq_db_data_valid  (rx_pkt_hndler_o_rq_db_data_valid),
  .rx_pkt_hndler_i_rq_db_rdy         (rx_pkt_hndler_i_rq_db_rdy),

  .rnic_intr             (rnic_intr),
  .stat_rx_pause_req     (stat_rx_pause_req),
  .ctl_tx_pause_req      (ctl_tx_pause_req),
  .ctl_tx_resend_pause   (ctl_tx_resend_pause),

  .o_global_dbg_cnt_en   (o_global_dbg_cnt_en),
  .o_global_dbg_cnt_clr  (o_global_dbg_cnt_clr),

  .axil_rstn (axil_rstn),
  .axis_rstn (axis_rstn),
  .axil_clk (axil_clk),
  .axis_clk (axis_clk),
  .rdma_resetn_done (rdma_resetn_done)
);

assign stat_rx_pause_req = 9'd0;

endmodule : rdma_subsystem_wrapper
